<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mol.supplier.mapper.microApp.MicroContractMapper">

    <select id="selectPurchaseAndContractList" parameterType="map" resultType="java.util.HashMap">
				select distinct (fpsc.purchase_id) as purchaseId,fp.order_number as orderNumber,fp.title as purchaseTitle,
				fp.buy_channel_id as buyChanleId,fpsc.supplier_id as supplierId,fq.id as quoteId,fq.supplier_salesman_id as salesmanId ,
				fpsc.contract_id as fddContractId,fpsc.start_sign_time as startSignTime,fpsc.sign_status as signStatus,
				if(isnull(fsrr.viewpdf_url),'0',fsrr.viewpdf_url) as viewPdfUrl
				from fy_purchase_supplier_contract fpsc
		    	left join fy_purchase fp on fp.id = fpsc.purchase_id
				left join fy_purchase_detail fpd on fp.id = fpd. fy_purchase_id
				left join fy_quote fq on fq.supplier_salesman_id = #{salesmanId} and fq.pk_supplier_id= #{supplierId}
							and fq.approval_over_status='1001'
				left join fadada_regist_record frr on frr.open_id = fpsc.supplier_id
        		left join fadada_sign_result_recode fsrr on fsrr.customer_id = frr.customer_id
				where fpsc.supplier_id= #{supplierId} and fpsc.sign_status in('2','3')
				group by fpsc.purchase_id

    </select>

</mapper>